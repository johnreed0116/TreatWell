CREATE OR REPLACE TYPE OBJECT_CHEQUE_DETAILS IS OBJECT (
  SR_NBR NUMBER,
  VOUCHER_NBR VARCHAR2(16),
  VOUCHER_DTE VARCHAR2(12),
  BILL_DTE VARCHAR2(12),
  BILL_NBR VARCHAR2(64),   
  AMNT NUMBER
);
/
CREATE OR REPLACE TYPE TABLE_CHEQUE_DETAILS IS TABLE OF OBJECT_CHEQUE_DETAILS;
/
CREATE OR REPLACE
FUNCTION GET_CHEQUE_DETAILS(FP_VM_ID IN NUMBER) 
RETURN TABLE_CHEQUE_DETAILS PIPELINED IS
CURSOR CS_CHEQUE_DETAILS IS 
        SELECT PK.PAYMENT_KNOCKOFF_ID,PK.VOUCHER_MASTER_ID,PK.ADJ_VOUCHER_MASTER_ID,PK.COA_CDE,PK.INVOICE_AMNT,PK.ADJUSTED_AMNT, 
           PK.CHEQUE_AMNT,(VST.VOUCHER_SUB_TYP_DESC||'-'||VM.VOUCHER_NBR) VOUCHER_NBR,VD.BILL_NBR,
           TO_CHAR(VM.VOUCHER_DTE,'MON-DD-YYYY') AS VOUCHER_DTE, TO_CHAR(NVL(VD.BILL_DTE,VM.VOUCHER_DTE),'MON-DD-YYYY') AS BILL_DTE
           FROM PAYMENT_KNOCKOFF PK,VOUCHER_MASTER VM,VOUCHER_SUB_TYPE VST,
           (SELECT VD.VOUCHER_MASTER_ID, MAX(VD.BILL_NBR) BILL_NBR, MAX(VD.BILL_DTE) BILL_DTE 
              FROM VOUCHER_DETAIL VD WHERE VD.BILL_NBR IS NOT NULL 
                AND VD.VOUCHER_MASTER_ID IN (SELECT PK.ADJ_VOUCHER_MASTER_ID FROM PAYMENT_KNOCKOFF PK WHERE PK.VOUCHER_MASTER_ID=FP_VM_ID)  
              GROUP BY VD.VOUCHER_MASTER_ID) VD
           WHERE PK.VOUCHER_MASTER_ID=FP_VM_ID
           AND VM.VOUCHER_MASTER_ID=PK.ADJ_VOUCHER_MASTER_ID 
           AND VM.VOUCHER_SUB_TYP_ID=VST.VOUCHER_SUB_TYP_ID 
           AND PK.ADJ_VOUCHER_MASTER_ID=VD.VOUCHER_MASTER_ID(+)
           ORDER BY PK.PAYMENT_KNOCKOFF_ID;
V_SR_NBR NUMBER;           
BEGIN
  V_SR_NBR := 0;
  IF (FP_VM_ID > 0) THEN 
    FOR FL_CD IN CS_CHEQUE_DETAILS LOOP
      V_SR_NBR := (V_SR_NBR + 1);
      PIPE ROW (OBJECT_CHEQUE_DETAILS(V_SR_NBR, FL_CD.VOUCHER_NBR, FL_CD.VOUCHER_DTE, FL_CD.BILL_DTE, NVL(FL_CD.BILL_NBR,FL_CD.VOUCHER_NBR), FL_CD.CHEQUE_AMNT));
      EXIT WHEN (V_SR_NBR > 9);
    END LOOP;
  END IF;
  V_SR_NBR := (V_SR_NBR + 1);
  IF (V_SR_NBR < 11) THEN
    FOR COUNTER IN V_SR_NBR .. 10 LOOP
      V_SR_NBR := (V_SR_NBR + 1);
      PIPE ROW (OBJECT_CHEQUE_DETAILS(COUNTER, NULL, NULL, NULL, NULL, NULL));
    END LOOP;
  END IF;
  RETURN;  
END;
/