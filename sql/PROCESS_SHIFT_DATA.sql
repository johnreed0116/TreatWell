CREATE OR REPLACE PROCEDURE PROCESS_SHIFT_DATA(PP_RECONCILIATION_ID IN NUMBER) AS
CURSOR CUR_ACCOUNT IS SELECT * FROM DAILY_SHIFT_ACCOUNT;
CURSOR CUR_SOURCE(MP_ACCOUNT_ID IN NUMBER) IS SELECT * FROM DAILY_SHIFT_SOURCE WHERE DAILY_SHIFT_ACCOUNT_ID=MP_ACCOUNT_ID;
CURSOR CUR_GST IS SELECT DSP.DAILY_SHIFT_PROCESS_ID, DSP.AMNT, CASE WHEN DSP.AMNT<>0 THEN ROUND((DSP.AMNT*5)/105,2) ELSE 0 END GST_AMNT  
    FROM DAILY_SHIFT_PROCESS DSP WHERE DSP.DAILY_SHIFT_RECON_ID=PP_RECONCILIATION_ID AND DSP.DAILY_SHIFT_ACCOUNT_ID IN (18,19,20,21,22); -- FOR FUEL ITEMS
TYPE CUR_TYP IS REF CURSOR;
CS CUR_TYP;
V_TABLE_NAME VARCHAR2(32);
V_COLUMN_NAME VARCHAR2(32);
V_SOURCE_TXT VARCHAR2(32);
V_QTY NUMBER;
V_AMNT NUMBER;
V_RATE NUMBER;
V_DATA NUMBER;
V_SITE_BASED_ON VARCHAR2(32);
V_GST_AMNT NUMBER;
BEGIN
  V_SITE_BASED_ON :='';
  V_GST_AMNT := 0;
  DELETE FROM DAILY_SHIFT_PROCESS WHERE DAILY_SHIFT_RECON_ID=PP_RECONCILIATION_ID; -- DELETE OLD PROCESS DATA
  FOR FL_ACC IN CUR_ACCOUNT LOOP     
    V_QTY := 0;
    V_AMNT := 0;
    V_RATE := 0;
    FOR FL_SOU IN CUR_SOURCE(FL_ACC.DAILY_SHIFT_ACCOUNT_ID) LOOP
      V_DATA := 0;
      V_COLUMN_NAME :='';
      V_SOURCE_TXT :='';
      SELECT COLUMN_NME, SOURCE_TXT INTO V_COLUMN_NAME, V_SOURCE_TXT FROM DAILY_SHIFT_SOURCE WHERE DAILY_SHIFT_SOURCE_ID=FL_SOU.DAILY_SHIFT_SOURCE_ID;    
      OPEN CS FOR ('SELECT '||V_COLUMN_NAME||' FROM 
                    (SELECT DSRS.SHIFT_RECON_SHEET_IND, SUM(NVL(DSRS.SHIFT_POS,0)) SHIFT_POS, SUM(NVL(DSRS.SHIFT_MANUAL,0)) SHIFT_MANUAL, SUM(NVL(DSRS.SHIFT_CASH,0)) SHIFT_CASH, 
                    SUM(NVL(DSRS.SHIFT_AR,0)) SHIFT_AR, SUM(NVL(DSRS.SHIFT_PAYOUT,0)) SHIFT_PAYOUT, SUM(NVL(DSRS.SHIFT_LOTTO_PAID,0)) SHIFT_LOTTO_PAID, 
                    SUM(NVL(DSRS.SHIFT_DRIVE_OFF,0)) SHIFT_DRIVE_OFF, SUM(NVL(DSRS.SHIFT_POINT_GAS,0)) SHIFT_POINT_GAS, SUM(NVL(DSRS.SHIFT_SALES,0)) SHIFT_SALES, 
                    SUM(NVL(DSRS.SHEET_BALANCE,0)) SHEET_BALANCE
                    FROM DAILY_SHIFT_RECON_SHEET DSRS WHERE DSRS.DAILY_SHIFT_RECON_ID='||PP_RECONCILIATION_ID||' AND DSRS.SHIFT_RECON_SHEET_IND=''SSV''
                    GROUP BY DSRS.SHIFT_RECON_SHEET_IND) SSV, 
                    (SELECT DSRS.DAILY_SHIFT_RECON_ID, NVL(DSRS.REGULAR_QTY,0) REGULAR_QTY, NVL(DSRS.REGULAR_AMNT,0) REGULAR_AMNT, NVL(DSRS.PLUS_QTY,0) PLUS_QTY, NVL(DSRS.PLUS_AMNT,0) PLUS_AMNT, 
                    NVL(DSRS.SUPER_QTY,0) SUPER_QTY, NVL(DSRS.SUPER_AMNT,0) SUPER_AMNT, NVL(DSRS.ULTRA94_QTY,0) ULTRA94_QTY, NVL(DSRS.ULTRA94_AMNT,0) ULTRA94_AMNT,
                    NVL(DSRS.DIESEL_QTY,0) DIESEL_QTY, NVL(DSRS.DIESEL_AMNT,0) DIESEL_AMNT
                    FROM DAILY_SHIFT_RECON_SHEET DSRS WHERE DSRS.DAILY_SHIFT_RECON_ID='||PP_RECONCILIATION_ID||' AND DSRS.SHIFT_RECON_SHEET_IND=''FR'' AND DSRS.SHIFT=''E'') FR,
                    (SELECT NVL(DSRM.TOBACCO,0) TOBACCO, NVL(DSRM.LOTTO,0) LOTTO, NVL(DSRM.OTHER,0) OTHER, NVL(DSRM.HOT_FOOD,0) HOT_FOOD, NVL(DSRM.CIGARETTES,0) CIGARETTES,  
                    NVL(DSRM.BEVERAGE,0) BEVERAGE, NVL(DSRM.DAIRY,0) DAIRY, NVL(DSRM.CONFECTIONERY,0) CONFECTIONERY, NVL(DSRM.NOVELTY,0) NOVELTY, 
                    NVL(DSRM.PHONE_CARDS,0) PHONE_CARDS, NVL(DSRM.PC_CARDS,0) PC_CARDS, NVL(DSRM.GST_COLLECTED,0) GST_COLLECTED, NVL(DSRM.PST_COLLECTED,0) PST_COLLECTED,
                    NVL(DSRM.STORE_CASH,0) STORE_CASH, NVL(DSRM.BANK_DEPOSIT,0) BANK_DEPOSIT, NVL(DSRM.OTHER_PAYOUT,0) OTHER_PAYOUT, NVL(DSRM.US_DOLLARS,0) US_DOLLARS,
                    NVL(DSRM.TOT_FUEL_SALES,0) TOT_FUEL_SALES, NVL(DSRM.FUEL_COMM,0) FUEL_COMM, NVL(DSRM.GST_COMM,0) GST_COMM, NVL(DSRM.NET_FUEL_DISC,0) NET_FUEL_DISC,
                    NVL(DSRM.EOD_NET_POS_STLM,0) EOD_NET_POS_STLM, NVL(DSRM.POS_REWARDS,0) POS_REWARDS, NVL(DSRM.GST_ON_PETRO_POINTS,0) GST_ON_PETRO_POINTS, 
                    NVL(DSRM.CREDIT_CARD_CHARGES,0) CREDIT_CARD_CHARGES, NVL(DSRM.FUEL_ADJUSTMENT,0) FUEL_ADJUSTMENT
                    FROM DAILY_SHIFT_RECON_MTD DSRM WHERE DSRM.DAILY_SHIFT_RECON_ID='||PP_RECONCILIATION_ID||') MTD');
      LOOP
          FETCH CS INTO V_DATA;
          EXIT WHEN CS%NOTFOUND;
          IF (V_SOURCE_TXT='QTY') THEN
            V_QTY := (V_QTY + V_DATA);
          END IF;
          IF (V_SOURCE_TXT='VAL') THEN
            V_AMNT := (V_AMNT + V_DATA);
          END IF;
      END LOOP;    
      CLOSE CS;
    END LOOP;  
    IF (V_QTY<>0) THEN
      V_RATE := ROUND(V_AMNT/V_QTY,4);
    END IF;
    INSERT INTO DAILY_SHIFT_PROCESS(DAILY_SHIFT_PROCESS_ID,DAILY_SHIFT_RECON_ID,DAILY_SHIFT_ACCOUNT_ID,QTY,RATE,AMNT)
        VALUES (SEQ_DAILY_SHIFT_PROCESS_ID.NEXTVAL,PP_RECONCILIATION_ID,FL_ACC.DAILY_SHIFT_ACCOUNT_ID,V_QTY,V_RATE,V_AMNT);
  END LOOP; 
  SELECT S.BASED_ON INTO V_SITE_BASED_ON FROM DAILY_SHIFT_RECON DSR, SITE S WHERE DSR.DAILY_SHIFT_RECON_ID=PP_RECONCILIATION_ID AND DSR.SITE_ID=S.SITE_ID;
  IF (V_SITE_BASED_ON='NON-COMMISSION') THEN
    FOR FL_GST IN CUR_GST LOOP
        UPDATE DAILY_SHIFT_PROCESS SET AMNT=ROUND((FL_GST.AMNT-FL_GST.GST_AMNT),2) WHERE DAILY_SHIFT_PROCESS_ID=FL_GST.DAILY_SHIFT_PROCESS_ID;
        V_GST_AMNT := (V_GST_AMNT+FL_GST.GST_AMNT);
    END LOOP;
     UPDATE DAILY_SHIFT_PROCESS SET AMNT=ROUND((AMNT+V_GST_AMNT),2) WHERE DAILY_SHIFT_RECON_ID=PP_RECONCILIATION_ID AND DAILY_SHIFT_ACCOUNT_ID=10; -- UPDATE GST
  END IF;  
END;
/