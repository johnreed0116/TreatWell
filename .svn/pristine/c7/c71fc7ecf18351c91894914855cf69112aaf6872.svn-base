<%-- 
    Document   : addAppointment
    Created on : Oct 4, 2017, 2:30:05 PM
    Author     : farazahmad
--%>
<%@include file="../header.jsp"%>
<link href="assets/global/plugins/fullcalendar/fullcalendar.min.css" rel="stylesheet" type="text/css"/>
<script src="assets/global/plugins/fullcalendar/fullcalendar.min.js"></script>
<script>
    $(document).ready(function () {
        $('#patientName').select2({
            placeholder: "Select an option",
            allowClear: true
        });
        $('#clinicId').select2({
            placeholder: "Select an option",
            allowClear: true
        });
        if ($('#userType').val() === 'ADMIN') {
            $('#doctorId').select2({
                placeholder: "Select an option",
                allowClear: true
            });
            $('#clinicId').on('change', function (e) {
                $('#doctorId').find('option').remove();
                $.get('setup.htm?action=getDoctorsForClinic', {clinicId: $('#clinicId').val()}, function (list) {
                    if (list.length > 0) {
                        for (var i = 0; i < list.length; i++) {
                            var newOption = new Option(list[i].DOCTOR_NME, list[i].TW_DOCTOR_ID, false, false);
                            $('#doctorId').append(newOption);
                        }
                    } else {
                        var newOption = new Option('No Doctor available.', '', true, false);
                        $('#doctorId').append(newOption);
                        $('#calendar').fullCalendar('removeEvents');
                    }
                    $('#doctorId').trigger('change');
                }, 'json');
            }).trigger('change');

            $('#doctorId').on('change', function (e) {
                getPreviousAppoinments();
            });
        } else {
            getPreviousAppoinments();
        }

        $('#calendar').fullCalendar({
            header: {
                left: 'prev,next today',
                center: 'title',
                right: 'month,agendaWeek'
            },
            defaultView: 'agendaWeek',
            editable: true,
            slotDuration: '00:15:00',
            minTime: '09:00:00',
            maxTime: '23:00:00',
            slotLabelFormat: 'H(:mm)',
            dayClick: function (date, jsEvent, view) {
                if (view.name === 'agendaWeek') {
                    $('#addModal').modal('show');
                    $('#appointmentDate').val('');
                    $('#appointmentDate').val(date.format("DD-MM-YYYY"));
                    $('#appointmentTime').val('');
                    $('#appointmentTime').val(date.format("HH:mm "));
                    getPatients($('#appointmentDate').val());
                }
            }, eventClick: function (calEvent, jsEvent, view) {
//                $('#editModal').modal('show');
//                var dt = moment(calEvent.start);
//                $('#appointmentId').val(calEvent.id);
//                $('#editAppointmentDate').val(dt.format("DD-MM-YYYY"));
//                $('#editAppointmentTime').val(dt.format("HH:mm "));
//                $('#editPatientName').val(calEvent.title);
//                $('#editRemarks').val(calEvent.description);
//                if (calEvent.status_ind !== 'P') {
//                    $('#cancelAppointmentBtn').addClass('disabled');
//                } else {
//                    $('#cancelAppointmentBtn').removeClass('disabled');
//                }
            }, eventDrop: function (event, delta, revertFunc) {
                var date = moment(event.start);
                bootbox.confirm({
                    message: "Do you want to change appointment?",
                    buttons: {
                        confirm: {
                            label: 'Yes',
                            className: 'btn-success'
                        },
                        cancel: {
                            label: 'No',
                            className: 'btn-danger'
                        }
                    },
                    callback: function (result) {
                        if (result) {
                            $.post('performa.htm?action=updateAppointmentDateTime', {appointmentId: event.id,
                                time: date.format("HH:mm "), date: date.format("DD-MM-YYYY")}, function (res) {
                                if (res.msg === 'saved') {
                                    $.bootstrapGrowl("Appointment updated successfully.", {
                                        ele: 'body',
                                        type: 'success',
                                        offset: {from: 'top', amount: 80},
                                        align: 'right',
                                        allow_dismiss: true,
                                        stackup_spacing: 10
                                    });
                                    getPreviousAppoinments();
                                } else {
                                    $.bootstrapGrowl("Appointment can not be updated.", {
                                        ele: 'body',
                                        type: 'error',
                                        offset: {from: 'top', amount: 80},
                                        align: 'right',
                                        allow_dismiss: true,
                                        stackup_spacing: 10
                                    });
                                    revertFunc();
                                }
                            }, 'json');

                        } else {
                            revertFunc();
                        }
                    }
                });

            }

        });
    });

    function getPatients(date) {
        $('#patientName').find('option').remove();
        $.get('performa.htm?action=getAvailablePatientsForAppointment', {clinicId: $('#clinicId').val(),
            doctorId: $('#doctorId').val(), date: date}, function (list) {
            if (list.length > 0) {
                for (var i = 0; i < list.length; i++) {
                    var newOption = new Option(list[i].PATIENT_NME + ' [' + list[i].MOBILE_NO + ']', list[i].TW_PATIENT_ID, false, false);
                    $('#patientName').append(newOption);
                }
            } else {
                var newOption = new Option('No patient available.', '', true, false);
                $('#patientName').append(newOption);
            }
            $('#patientName').trigger('change');
        }, 'json');
    }
    function saveAppointment() {
        if ($.trim($('#patientName').val()) === '') {
            $('#patientName').notify('Please select patient.', 'error', {autoHideDelay: 15000});
            $('#patientName').focus();
            return false;
        }
        if ($.trim($('#doctorId').val()) === '') {
            $('#doctorId').notify('Please select doctor.', 'error', {autoHideDelay: 15000});
            $('#doctorId').focus();
            return false;
        }
        var obj = {
            appointmentDate: $('#appointmentDate').val(), appointmentTime: $('#appointmentTime').val(),
            patientId: $('#patientName').val(), remarks: $('#remarks').val(), doctorId: $('#doctorId').val(),
            clinicId: $('#clinicId').val()
        };
        $.post('performa.htm?action=saveAppointment', obj, function (obj) {
            $('#addModal').modal('hide');
            if (obj.msg === 'saved') {
                $.bootstrapGrowl("Appointment saved successfully.", {
                    ele: 'body',
                    type: 'success',
                    offset: {from: 'top', amount: 80},
                    align: 'right',
                    allow_dismiss: true,
                    stackup_spacing: 10
                });
                $('#remarks').val('');
                getPreviousAppoinments();
                return false;
            } else if (obj.msg === 'error') {
                $.bootstrapGrowl("Error in saving data. please try again later.", {
                    ele: 'body',
                    type: 'danger',
                    offset: {from: 'top', amount: 80},
                    align: 'right',
                    allow_dismiss: true,
                    stackup_spacing: 10
                });
                return false;
            } else if (obj.msg === 'no_clinic') {
                $.bootstrapGrowl("Doctor dont have any clinic registered. Please contact system administrator.", {
                    ele: 'body',
                    type: 'danger',
                    offset: {from: 'top', amount: 80},
                    align: 'right',
                    allow_dismiss: true,
                    stackup_spacing: 10
                });
            }
        }, 'json');
        return false;
    }

    function getPreviousAppoinments() {
        if ($('#doctorId').val() !== '') {
            var events = [];
            $('#calendar').fullCalendar('removeEvents');
            $.get('performa.htm?action=getAppointmentsForDoctor', {doctorId: $('#doctorId').val()}, function (list) {
                if (list.length > 0) {
                    for (var i = 0; i < list.length; i++) {
                        var start = moment(list[i].APPOINTMENT_TIME, "DD-MM-YYYY HH:mm");
                        var end = moment(list[i].APPOINTMENT_TIME, "DD-MM-YYYY HH:mm").add(15, 'minutes');
                        if (list[i].STATUS_IND === 'P') {
                            var obj = {id: list[i].TW_APPOINTMENT_ID, title: list[i].APPOINTMENT_NO + '-' + list[i].PATIENT_NME, allDay: false,
                                start: start, end: end, editable: true, overlap: false, description: list[i].REMARKS,
                                status_ind: list[i].STATUS_IND};
                            events.push(obj);
                        } else if (list[i].STATUS_IND === 'C') {
                            var obj = {id: list[i].TW_APPOINTMENT_ID, title: list[i].APPOINTMENT_NO + '-' + list[i].PATIENT_NME, allDay: false,
                                start: start, end: end, editable: false, overlap: false, description: list[i].REMARKS,
                                status_ind: list[i].STATUS_IND, color: 'red', textColor: 'white'};
                            events.push(obj);
                        } else if (list[i].STATUS_IND === 'A') {
                            var obj = {id: list[i].TW_APPOINTMENT_ID, title: list[i].APPOINTMENT_NO + '-' + list[i].PATIENT_NME, allDay: false,
                                start: start, end: end, editable: false, overlap: false, description: list[i].REMARKS,
                                status_ind: list[i].STATUS_IND, color: 'green', textColor: 'white'};
                            events.push(obj);
                        } else if (list[i].STATUS_IND === 'D') {
                            var obj = {id: list[i].TW_APPOINTMENT_ID, title: list[i].APPOINTMENT_NO + '-' + list[i].PATIENT_NME, allDay: false,
                                start: start, end: end, editable: false, overlap: false, description: list[i].REMARKS,
                                status_ind: list[i].STATUS_IND, color: 'blue', textColor: 'white'};
                            events.push(obj);
                        }
                    }
                    $('#calendar').fullCalendar('addEventSource', events);
                }
            }, 'json');
        }
    }
    var Appintment = {
        cancelAppointment: function () {
            var id = $('#appointmentId').val();
            bootbox.confirm({
                message: "Do you want to cancel appointment?",
                buttons: {
                    confirm: {
                        label: 'Yes',
                        className: 'btn-success'
                    },
                    cancel: {
                        label: 'No',
                        className: 'btn-danger'
                    }
                },
                callback: function (result) {
                    if (result) {
                        $('#editModal').modal('hide');
                        $.post('performa.htm?action=updateAppointmentStatus', {appointmentId: id, status: 'C'}, function (res) {
                            if (res.msg === 'saved') {
                                $.bootstrapGrowl("Appointment cancelled successfully.", {
                                    ele: 'body',
                                    type: 'success',
                                    offset: {from: 'top', amount: 80},
                                    align: 'right',
                                    allow_dismiss: true,
                                    stackup_spacing: 10
                                });
                                getPreviousAppoinments();
                            }
                        }, 'json');

                    }
                }
            });
        }
    };
</script>
<div class="page-head">
    <!-- BEGIN PAGE TITLE -->
    <div class="page-title">
        <h1>Patient Appointment </h1>
    </div>
</div>
<input type="hidden" id="userType" value="${requestScope.refData.userType}">
<div class="modal fade" id="addModal">
    <div class="modal-dialog" role="document">
        <div class="modal-content">
            <div class="modal-header">
                <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                    <span aria-hidden="true">&times;</span>
                </button>
                <h3 class="modal-title">Add Appointment</h3>
            </div>
            <div class="modal-body">
                <form action="#" role="form" method="post" >
                    <div class="form-group">
                        <label>Appointment Date</label>
                        <input type="text" class="form-control" id="appointmentDate" readonly=""  >
                    </div>
                    <div class="form-group">
                        <label>Appointment Time</label>
                        <input type="text" class="form-control" id="appointmentTime" readonly=""  >
                    </div>
                    <div class="form-group">
                        <label  for="patientName" >Patient Name</label>
                        <select class="select2_category form-control" name="patientName" id="patientName" data-placeholder="Choose a Patient" tabindex="1">
                            <option value=""></option>
                        </select>
                    </div>
                    <div class="form-group">
                        <label>Remarks</label>
                        <textarea rows="2" cols="40" class="form-control" id="remarks"></textarea>
                    </div>
                </form>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-primary" onclick="saveAppointment();">Save</button>
                <button type="button" class="btn btn-secondary" data-dismiss="modal">Close</button>
            </div>
        </div>
    </div>
</div>

<div class="modal fade" id="editModal">
    <div class="modal-dialog" role="document">
        <div class="modal-content">
            <div class="modal-header">
                <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                    <span aria-hidden="true">&times;</span>
                </button>
                <h3 class="modal-title">View Appointment</h3>

            </div>
            <div class="modal-body">
                <form action="#" role="form" method="post" >
                    <input type="hidden" id="appointmentId" value="">
                    <div class="form-group">
                        <label>Appointment Date</label>
                        <input type="text" class="form-control" id="editAppointmentDate" readonly=""  >
                    </div>
                    <div class="form-group">
                        <label>Appointment Time</label>
                        <input type="text" class="form-control" id="editAppointmentTime" readonly=""  >
                    </div>
                    <div class="form-group">
                        <label  for="patientName" >Patient Name</label>
                        <input type="text" class="form-control" id="editPatientName" readonly=""  >
                    </div>
                    <div class="form-group">
                        <label>Remarks</label>
                        <textarea rows="2" cols="40" class="form-control" id="editRemarks"></textarea>
                    </div>
                </form>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-danger" id="cancelAppointmentBtn" onclick="Appintment.cancelAppointment();">Cancel Appointment</button>
                <button type="button" class="btn btn-secondary" data-dismiss="modal">Close</button>
            </div>
        </div>
    </div>
</div>
<div class="portlet box green">
    <div class="portlet-title">
        <div class="caption">
            Doctor Info
        </div>
    </div>
    <div class="portlet-body">
        <c:choose>
            <c:when test="${requestScope.refData.userType=='ADMIN'}">
                <div class="row">
                    <div class="col-md-4">
                        <div class="form-group">
                            <label>Select Clinic</label>
                            <select id="clinicId" class="select2_category form-control" data-placeholder="Choose a Clinic">
                                <c:forEach items="${requestScope.refData.clinics}" var="obj" varStatus="i">
                                    <option value="${obj.TW_CLINIC_ID}">${obj.CLINIC_NME}</option>
                                </c:forEach>
                            </select>
                        </div>
                    </div>
                    <div class="col-md-4">
                        <div class="form-group">
                            <label>Select Doctor</label>
                            <select id="doctorId" class="select2_category form-control" data-placeholder="Choose a Doctor">
                                <option value="">Select Doctor</option>
                            </select>
                        </div>
                    </div>
                </div>
            </c:when>
            <c:when test="${requestScope.refData.userType=='DOCTOR'}">
                <input type="hidden" id="doctorId" value="${requestScope.refData.doctorId}">
            </c:when>
        </c:choose>

        <div class="row">
            <div class="col-md-12">
                <div id='calendar'></div>
            </div>
        </div>
    </div>
</div>
<%@include file="../footer.jsp"%>

