CREATE OR REPLACE
PROCEDURE         UPDAET_COSTPRICE(PP_VOUCHER_MASTER_ID NUMBER) AS
CURSOR CUR_MASTER IS SELECT SBI.COA_CDE, VM.VOUCHER_DTE, VM.SITE_ID, VM.COMPANY_ID, S.BUYSELL_START_DTE
                          FROM VOUCHER_MASTER VM, SITE_BUY_ITEM SBI, SITE S 
                          WHERE VM.SITE_ID = SBI.SITE_ID AND VM.SITE_ID = S.SITE_ID 
                          AND S.BUYSELL_START_DTE IS NOT NULL AND VM.VOUCHER_DTE >= S.BUYSELL_START_DTE
                          AND VM.VOUCHER_MASTER_ID = PP_VOUCHER_MASTER_ID ORDER BY SBI.COA_CDE;     
CURSOR CUR_COSTPRICE(MP_COA_CDE IN VARCHAR2,MP_SITE_ID IN NUMBER,MP_COMPANY_ID IN NUMBER,MP_VOUCHER_DTE IN DATE) IS 
                      SELECT VM.VOUCHER_MASTER_ID, VD.VOUCHER_DETAIL_ID, VST.VOUCHER_SUB_TYP_DESC VOUCHER_TYPE, TO_CHAR(VM.VOUCHER_DTE,'DD-MM-YYYY') VOUCHER_DTE, 
                         NVL(VD.QTY,0) QTY, NVL(VD.AMNT,0) AMNT, NVL(VD.TOT_QTY,0) TOT_QTY, NVL(VD.TOT_VALUE,0) TOT_VALUE, NVL(VD.COST_PRICE,0) COST_PRICE
                          FROM VOUCHER_DETAIL VD, VOUCHER_MASTER VM, VOUCHER_SUB_TYPE VST      
                          WHERE VD.VOUCHER_MASTER_ID = VM.VOUCHER_MASTER_ID AND VM.VOUCHER_SUB_TYP_ID = VST.VOUCHER_SUB_TYP_ID      
                          AND VM.CANCELLED_BY IS NULL AND VM.POSTED_IND='Y' AND VM.SITE_ID = MP_SITE_ID      
                          AND VM.VOUCHER_DTE >= MP_VOUCHER_DTE AND NVL(VD.QTY,0) <> 0      
                          AND VD.COA_CDE = MP_COA_CDE AND VM.COMPANY_ID = MP_COMPANY_ID   
                          ORDER BY TO_CHAR(VM.VOUCHER_DTE, 'YYMMDD'), VM.VOUCHER_SUB_TYP_ID, VM.VOUCHER_MASTER_ID, VD.VOUCHER_DETAIL_ID;                          
V_TOT_SALE_QTY NUMBER;                          
V_TOT_QTY NUMBER;
V_TOT_VALUE NUMBER;
V_COST_PRICE NUMBER;
V_BEFORE_COST_PRICE NUMBER;
V_COST_VALUE NUMBER;
V_VOUCHER_DTE DATE;
V_MIN_VOUCHER_DTE DATE;
BEGIN
  FOR FL_MASTER IN CUR_MASTER LOOP
    V_VOUCHER_DTE := FL_MASTER.VOUCHER_DTE;
    SELECT NVL(MAX(VM.VOUCHER_DTE), FL_MASTER.VOUCHER_DTE), NVL(MIN(VM.VOUCHER_DTE), FL_MASTER.VOUCHER_DTE) INTO V_VOUCHER_DTE, V_MIN_VOUCHER_DTE
          FROM VOUCHER_DETAIL VD, VOUCHER_MASTER VM    
          WHERE VD.VOUCHER_MASTER_ID = VM.VOUCHER_MASTER_ID 
          AND VM.CANCELLED_BY IS NULL AND VM.POSTED_IND='Y' AND VM.SITE_ID = FL_MASTER.SITE_ID      
          AND VM.VOUCHER_DTE < FL_MASTER.VOUCHER_DTE AND NVL(VD.QTY,0) <> 0 
          AND VM.VOUCHER_DTE >= FL_MASTER.BUYSELL_START_DTE
          AND VD.COA_CDE = FL_MASTER.COA_CDE AND VM.COMPANY_ID = FL_MASTER.COMPANY_ID   
          ORDER BY TO_CHAR(VM.VOUCHER_DTE, 'YYMMDD'), VM.VOUCHER_SUB_TYP_ID, VM.VOUCHER_MASTER_ID, VD.VOUCHER_DETAIL_ID; 
          
    V_TOT_SALE_QTY := 0;
    V_TOT_QTY := 0;
    V_TOT_VALUE := 0;
    V_COST_PRICE := 0;
    V_BEFORE_COST_PRICE := 0;
    V_COST_VALUE := 0;
    FOR FL_COSTPRICE IN CUR_COSTPRICE(FL_MASTER.COA_CDE,FL_MASTER.SITE_ID,FL_MASTER.COMPANY_ID,V_VOUCHER_DTE) LOOP
      IF (V_COST_PRICE = 0 AND V_VOUCHER_DTE > V_MIN_VOUCHER_DTE) THEN        
        V_TOT_QTY := ROUND((V_TOT_QTY + FL_COSTPRICE.TOT_QTY), 2);
        V_TOT_VALUE := ROUND((V_TOT_VALUE + FL_COSTPRICE.TOT_VALUE), 2);
        IF V_TOT_QTY <> 0 THEN
          V_COST_PRICE := ROUND((V_TOT_VALUE/V_TOT_QTY), 4);
        END IF;     
      ELSIF (FL_COSTPRICE.QTY > 0) THEN   
        V_BEFORE_COST_PRICE := V_COST_PRICE;
        V_COST_VALUE := ROUND((FL_COSTPRICE.AMNT), 2);
        V_TOT_QTY := ROUND((V_TOT_QTY + FL_COSTPRICE.QTY), 2);
        V_TOT_VALUE := ROUND((V_TOT_VALUE + FL_COSTPRICE.AMNT), 2);
        IF (V_TOT_QTY<>0) THEN
          V_COST_PRICE := ROUND((V_TOT_VALUE/V_TOT_QTY), 4);    
        ELSE 
          V_COST_PRICE := 0;
        END IF;        
        UPDATE ALBERTA.VOUCHER_DETAIL SET TOT_QTY = V_TOT_QTY, TOT_VALUE = V_TOT_VALUE, COST_PRICE = V_COST_PRICE, BEFORE_COST_PRICE = V_BEFORE_COST_PRICE, COST_VALUE = V_COST_VALUE, TOT_SALE_QTY = V_TOT_SALE_QTY
        WHERE VOUCHER_DETAIL_ID = FL_COSTPRICE.VOUCHER_DETAIL_ID;
      ELSIF (FL_COSTPRICE.QTY < 0) THEN
        V_BEFORE_COST_PRICE := V_COST_PRICE;
        IF (FL_COSTPRICE.VOUCHER_TYPE='SI' AND FL_MASTER.COA_CDE <> '500-01-01-0004') THEN -- INSTEAD OF DIESEL
          V_TOT_SALE_QTY := ROUND((FL_COSTPRICE.QTY + ALBERTA.GET_RECIPE_SALE_QTY(FL_MASTER.COA_CDE, FL_COSTPRICE.VOUCHER_DTE,FL_MASTER.SITE_ID,FL_MASTER.COMPANY_ID)),2);
        ELSE
          V_TOT_SALE_QTY := FL_COSTPRICE.QTY;
        END IF;  
        V_COST_VALUE := ROUND((V_TOT_SALE_QTY * V_COST_PRICE), 2);
        V_TOT_QTY := ROUND((V_TOT_QTY + V_TOT_SALE_QTY), 2);
        V_TOT_VALUE :=  ROUND((V_TOT_VALUE + (V_TOT_SALE_QTY * V_COST_PRICE)), 2);
        IF (V_TOT_QTY<>0) THEN
          V_COST_PRICE := ROUND((V_TOT_VALUE/V_TOT_QTY), 4);    
        ELSE 
          V_COST_PRICE := 0;
        END IF;  
        UPDATE ALBERTA.VOUCHER_DETAIL SET TOT_QTY = V_TOT_QTY, TOT_VALUE = V_TOT_VALUE, COST_PRICE = V_COST_PRICE, BEFORE_COST_PRICE = V_BEFORE_COST_PRICE, COST_VALUE = V_COST_VALUE, TOT_SALE_QTY = V_TOT_SALE_QTY
        WHERE VOUCHER_DETAIL_ID = FL_COSTPRICE.VOUCHER_DETAIL_ID;
      END IF;          
      
    END LOOP;

  END LOOP;  
  COMMIT;
END;  